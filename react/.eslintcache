[{"/Users/marcus/Desktop/workspace/locals-full/react/src/reportWebVitals.js":"1","/Users/marcus/Desktop/workspace/locals-full/react/src/components/Home.js":"2","/Users/marcus/Desktop/workspace/locals-full/react/src/services/cities.js":"3","/Users/marcus/Desktop/workspace/locals-full/react/src/services/guides.js":"4","/Users/marcus/Desktop/workspace/locals-full/react/src/components/GuideCard.js":"5","/Users/marcus/Desktop/workspace/locals-full/react/src/App.js":"6","/Users/marcus/Desktop/workspace/locals-full/react/src/components/AppBar.js":"7","/Users/marcus/Desktop/workspace/locals-full/react/src/components/CityPage.js":"8","/Users/marcus/Desktop/workspace/locals-full/react/src/components/Profile.js":"9","/Users/marcus/Desktop/workspace/locals-full/react/src/components/CitySearch.js":"10","/Users/marcus/Desktop/workspace/locals-full/react/src/index.js":"11","/Users/marcus/Desktop/workspace/locals-full/react/src/components/GuideList.js":"12"},{"size":362,"mtime":1608403437954,"results":"13","hashOfConfig":"14"},{"size":405,"mtime":1608492179988,"results":"15","hashOfConfig":"14"},{"size":391,"mtime":1608417204839,"results":"16","hashOfConfig":"14"},{"size":1198,"mtime":1608754184182,"results":"17","hashOfConfig":"14"},{"size":2543,"mtime":1608660179386,"results":"18","hashOfConfig":"14"},{"size":3598,"mtime":1608819606179,"results":"19","hashOfConfig":"14"},{"size":1625,"mtime":1608819550963,"results":"20","hashOfConfig":"14"},{"size":1095,"mtime":1608750177864,"results":"21","hashOfConfig":"14"},{"size":11443,"mtime":1608753838319,"results":"22","hashOfConfig":"14"},{"size":1888,"mtime":1608750940046,"results":"23","hashOfConfig":"14"},{"size":847,"mtime":1608820025786,"results":"24","hashOfConfig":"14"},{"size":347,"mtime":1608492179988,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"68ia8o",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/marcus/Desktop/workspace/locals-full/react/src/reportWebVitals.js",[],["57","58"],"/Users/marcus/Desktop/workspace/locals-full/react/src/components/Home.js",[],"/Users/marcus/Desktop/workspace/locals-full/react/src/services/cities.js",["59"],"import axios from 'axios';\n\nconst extractCitiesList = lst => {\n    console.log(lst);\n    return lst\n    .map(obj => obj.cities.map(city => city + \", \" + obj.country))\n    .reduce((a, b) => a.concat(b), []);\n}\n\nconst getAllCities = () => \n    axios\n    .get('https://countriesnow.space/api/v0.1/countries')\n    .then(res => extractCitiesList(res.data.data))\n\nexport default { getAllCities };\n",["60","61"],"/Users/marcus/Desktop/workspace/locals-full/react/src/services/guides.js",["62"],"import axios from 'axios';\n\nconst baseUrl = '/api/guides';\n\nconst getAllGuides = () => \n    axios\n    .get(baseUrl + '/list')\n    .then(res => res.data);\n\nconst getAllCities = () => \n    axios\n    .get(baseUrl + '/cities')\n    .then(res => res.data);\n\nconst getCurrencies = () =>\n    axios\n    .get(baseUrl + '/currencies')\n    .then(res => res.data);\n\nconst getLanguages = () => \n    axios\n    .get(baseUrl + '/languages')\n    .then(res => res.data);\n\nconst getCityGuides = (city) => \n    axios\n    .get(baseUrl + `/city/${city}`)\n    .then(res => res.data);\n\nconst getUserProfile = (email) => \n    axios\n    .get(baseUrl + `/email/${email}`)\n    .then(res => res.data);\n\nconst updateUserProfile = (email, newProfile) =>\n    axios\n    .put(baseUrl + `/email/${email}`, newProfile)\n    .then(res => res.data);\n\nconst addUser = (email, newProfile) => \n    axios\n    .post(baseUrl + `/email/${email}`, newProfile)\n    .then(res => res.data);\n\nconst deleteUser = (email) => \n    axios\n    .delete(baseUrl + `/email/${email}`)\n    .then(res => res.data);\n\nexport default { getAllGuides, getAllCities, getCityGuides, getUserProfile, updateUserProfile, addUser, deleteUser, getCurrencies, getLanguages };","/Users/marcus/Desktop/workspace/locals-full/react/src/components/GuideCard.js",["63","64","65"],"import React from 'react';\nimport { Card, ListGroup, ListGroupItem, Modal, Button } from 'react-bootstrap';\nimport { useState } from 'react';\n\nconst GuideCard = props => {\n    const { guideData } = props;\n    const { name, gender, hourlyRate, transport, languages, intro, email, mobile } = guideData;\n    const [ showModal, setModal ] = useState(false);\n\n    const closeModal = () => setModal(false);\n    const openModal = () => setModal(true);\n    \n    // const profilePhoto = <Card.Img variant=\"top\" src=\"holder.js/100px180?text=Image cap\" />\n\n    return (\n        <>\n            <Card key={email} style={{ textAlign: \"center\", width: 900,  marginLeft: 15, marginRight: 15, marginTop: 15, marginBottom: 10}}>\n                <Card.Header>\n                <Card.Title>{name}</Card.Title>\n                </Card.Header>\n                <ListGroup className=\"list-group-flush\">\n                <ListGroupItem><strong>Languages:</strong> {languages.join(\", \")}</ListGroupItem>\n                <ListGroupItem>\n                    <div style={{display: \"flex\", flexWrap: \"wrap\", justifyContent: \"space-evenly\"}}>\n                        <div>\n                        <strong>Guide Fee:</strong> {hourlyRate.join(\" \")} / hour\n                        </div>\n                        <div>\n                        <strong>Transport:</strong> {transport ? transport + \" pax\" : \"No\"}\n                        </div>\n                    </div>\n                </ListGroupItem>\n                </ListGroup>\n                <Card.Body>\n                    <Button variant=\"primary\" onClick={openModal}>More Info</Button>\n                </Card.Body>\n            </Card>\n            <Modal\n            show={showModal}\n            onHide={closeModal}\n            centered\n            >\n                <Modal.Header closeButton>\n                <Modal.Title>{name}'{name.toLowerCase().endsWith('s') ? '' : 's'} Information</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                {intro}\n                </Modal.Body>\n                <Modal.Body>\n                <strong>Email: </strong><a target=\"_blank\" href={`mailto:${email}`}>{email}</a><br/>\n                <strong>Mobile: </strong><a target=\"_blank\" href={`tel:${mobile}`}>{mobile}</a>\n                </Modal.Body>\n                <Modal.Footer>\n                <Button disabled variant=\"secondary\">\n                    Make an Appointment\n                </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\n\nexport default GuideCard;","/Users/marcus/Desktop/workspace/locals-full/react/src/App.js",["66","67","68"],"/Users/marcus/Desktop/workspace/locals-full/react/src/components/AppBar.js",[],"/Users/marcus/Desktop/workspace/locals-full/react/src/components/CityPage.js",["69","70"],"import React, { useEffect, useState } from 'react';\nimport GuideList from './GuideList';\nimport guidesServices from '../services/guides';\n\nconst filterGuides = (city, guideList) => guideList.filter(guide => guide.city.includes(city));\n\nconst CityPage = (props) => {\n    const { city, guides } = props;\n    //const guideList = filterGuides(city, guides);\n    const [ guideList, setList ] = useState([]);\n    const [ loading, setLoading ] = useState(false);\n    useEffect(() => {\n        setLoading(true);\n        guidesServices\n        .getCityGuides(city)\n        .then(r => {\n            console.log(r);\n            setList(r);\n            setLoading(false);\n        });\n    }\n    , [city]);\n    const hasGuides = guideList.length !== 0;\n\n    return (\n        <div>\n            <h2 className=\"city-header\">Tour Guides at: {city}</h2>\n            {!loading && hasGuides && <GuideList list={guideList} />}\n            {loading && <h4><br /><br />Loading...</h4>}\n            {!hasGuides && !loading && <h4><br /><br />No tour guides found :(</h4>}\n        </div>\n    )\n}\n\nexport default CityPage;","/Users/marcus/Desktop/workspace/locals-full/react/src/components/Profile.js",["71","72","73"],"import React, { useEffect, useState } from 'react';\nimport { Form, Col, Button, Alert, Modal } from 'react-bootstrap';\nimport Select from 'react-select';\nimport CreatableSelect from 'react-select/creatable'\nimport guidesServices from '.././services/guides';\nimport citiesServices from '.././services/cities';\n\nconst sortThenObjectify = lst => lst.sort((a, b) => a > b ? 1 : -1).map(x => ({value: x, label: x}));\n\nconst NAME_ERROR = \"Name must be at least 3 characters.\"\n\nconst MOBILE_ERROR = \"Mobile must consist of at least 8 numeric digits.\"\n\nconst EMPTY_ERROR = \"Required fields must not be empty.\"\n\nconst isValidName = name => ![1, 2].includes(name.length);\n\nconst isValidMobile = mobile => (mobile.match(/^[0-9]+$/) && mobile.length > 7) || mobile.length === 0;\n\nconst FORM_PROPS = [ \"id\", \"name\", \"intro\", \"currency\", \"hourlyRate\", \"email\", \"mobile\", \"transport\", \"cities\", \"languages\" ];\n\nconst Required = () => <span className=\"required\">*</span>;\n\nconst Profile = (props) => {\n    const { user, logoutHandler, saveHandler } = props;\n    const [ formState, setFormState ] = useState(user)\n    const [ nameError, setNameError ] = useState(false); // should be at least 3 chars and at most 20 chars\n    const [ mobileError, setMobileError ] = useState(false); \n    const [ emptyError, setEmptyError ] = useState(false); // at least one\n    const [ showSuccess, setSuccess ] = useState(false);\n    const [ showError, setError ] = useState(false);\n    const [ showModal, setModal ] = useState(false);\n    const [ citiesList, setCitiesList ] = useState([]);\n    const [ citiesLoading, setCitiesLoading ] = useState(false);\n    const [ currencies, setCurrencies ] = useState([]);\n    const [ languages, setLanguages ] = useState([]);\n    \n    useEffect(() => {\n        setCitiesLoading(true);\n        guidesServices\n        .getAllCities()\n        .then(lst => {\n            console.log(lst);\n            setCitiesList(lst);\n            setCitiesLoading(false);\n        });\n    }, []);\n\n    useEffect(() => {\n        guidesServices\n        .getCurrencies()\n        .then(lst => {\n            console.log(lst);\n            setCurrencies(lst);\n        })\n    }, [])\n\n    useEffect(() => {\n        guidesServices\n        .getLanguages()\n        .then(lst => {\n            console.log(lst);\n            setLanguages(lst);\n        })\n    }, [])\n\n    const validate = obj => {\n        const objCopy = {...obj};\n        delete objCopy.intro;\n        console.log(obj.cities.length === 0);\n        const reqIsNotEmpty = !Object.values(objCopy).filter(prop => prop === \"\" || prop.length === 0).length && !obj.hourlyRate.includes(\"\");\n        isValidMobile(obj.mobile) ? setMobileError(false) : setMobileError(true);\n        isValidName(obj.name) ? setNameError(false) : setNameError(true);\n        reqIsNotEmpty ? setEmptyError(false) : setEmptyError(true);\n        const isSuccess = isValidName(obj.name) && isValidMobile(obj.mobile) && reqIsNotEmpty;\n        isSuccess ? setSuccess(true) : setSuccess(false);\n        isSuccess ? setError(false) : setError(true);\n        setTimeout(() => {\n            setMobileError(false);\n            setNameError(false);\n            setEmptyError(false);\n            setSuccess(false);\n            setError(false);\n        }, 5000);\n        if (isSuccess) {\n            guidesServices.updateUserProfile(obj.email, obj);\n            setFormState(obj);\n            saveHandler(obj);\n        } else {\n            setFormState({...formState});\n        }\n    }\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        const form = event.target;\n        const [ name, intro, currency, rate, email, mobile, transport ] = \n            [ form.name, form.intro, form.currency, form.hourlyRate, form.email, form.mobile, form.transport ]\n            .map(obj => obj.value);\n        const [ cities, languages ] = [ form.cities, form.languages ]\n            .map(radioArr => radioArr.value ? [].concat(radioArr.value) : Array.from(radioArr).map(node => node.defaultValue));\n        const newProfile = { \n            id: formState.id,\n            name: name, \n            intro: intro, \n            hourlyRate: [currency, rate], \n            email: email, \n            cities: cities, \n            languages: languages,\n            mobile: mobile,\n            transport: transport,\n        };\n        validate(newProfile);\n        console.log(name);\n        console.log(intro);\n        console.log(currency);\n        console.log(rate);\n        console.log(email);\n        console.log(cities);\n        console.log(languages);\n        console.log(newProfile);\n    }\n    \n    const deleteHandler = () => {\n        logoutHandler();\n    }\n\n    const openModal = () => setModal(true);\n    const closeModal = () => setModal(false);\n\n    console.log(\"current form state is \", formState);\n\n    return (\n        <>\n            {showError && \n            <Alert variant=\"danger\">\n                {nameError && <div>{NAME_ERROR}</div>}\n                {mobileError && <div>{MOBILE_ERROR}</div>}\n                {emptyError && <div>{EMPTY_ERROR}</div>}\n            </Alert>\n            }\n            {(showSuccess) && \n                <Alert variant=\"success\">\n                    Profile saved successfully.\n                </Alert>\n            }\n            <h4 className=\"profile-header\">My Guide Profile</h4>\n            <Form style={{margin: 30}} onSubmit={handleSubmit}>\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"name\">\n                        <Form.Label>Name<Required /></Form.Label>\n                        <Form.Control maxlength=\"20\" type=\"name\" defaultValue={formState.name} /> {/*isInvalid={nameError}/>\n                        <Form.Control.Feedback type=\"invalid\">\n                            Must be at least 3 characters.\n                        </Form.Control.Feedback>*/}\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"mobile\">\n                        <Form.Label>Mobile<Required /></Form.Label>\n                        <Form.Control maxlength=\"15\" type=\"text\" defaultValue={formState.mobile} /> {/*isInvalid={mobileError} />\n                        <Form.Control.Feedback type=\"invalid\">\n                            Must be at least 8 numeric digits.\n                        </Form.Control.Feedback>*/}\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"email\">\n                        <Form.Label>Email Address<Required /></Form.Label>\n                        <Form.Control disabled type=\"email\" defaultValue={formState.email} />\n                    </Form.Group>\n                </Form.Row>\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"transport\">\n                    <Form.Label>Transport<Required /></Form.Label>\n                    <Form.Control type=\"number\" min=\"0\" defaultValue={formState.transport} placeholder=\"No. of guests\" />\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"hourlyRate\">\n                        <Form.Label>Hourly Rate<Required /></Form.Label>\n                        <Form.Control min=\"0\" type=\"number\" defaultValue={formState.hourlyRate[1]} />\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"currency\">\n                        <Form.Label>Currency<Required /></Form.Label>\n                        <CreatableSelect\n                        className=\"basic-single\"\n                        classNamePrefix=\"select\"\n                        defaultValue={{label:formState.hourlyRate[0], value:formState.hourlyRate[0]}}\n                        isDisabled={false}\n                        isLoading={false}\n                        isClearable={false}\n                        isRtl={false}\n                        isSearchable={true}\n                        name=\"currency\"\n                        options={sortThenObjectify(currencies)}\n                        onChange={void(0)}\n                        />\n                    </Form.Group>\n                </Form.Row>\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"cities\">\n                        <Form.Label >Cities<Required /></Form.Label>\n                        <CreatableSelect\n                        className=\"basic-single\"\n                        classNamePrefix=\"select\"\n                        placeholder=\"Select at least one city\"\n                        defaultValue={sortThenObjectify(formState.cities)}\n                        isMulti\n                        isDisabled={false}\n                        isLoading={citiesLoading}\n                        isClearable={false}\n                        isRtl={false}\n                        isSearchable={true}\n                        name=\"cities\"\n                        options={sortThenObjectify(citiesList)}\n                        onChange={void(0)}\n                        />\n                    </Form.Group>\n                </Form.Row>\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"languages\">\n                        <Form.Label>Languages<Required /></Form.Label>\n                        <CreatableSelect\n                        className=\"basic-single\"\n                        classNamePrefix=\"select\"\n                        placeholder=\"Select at least one language\"\n                        defaultValue={sortThenObjectify(formState.languages)}\n                        isMulti\n                        isDisabled={false}\n                        isLoading={false}\n                        isClearable={false}\n                        isRtl={false}\n                        isSearchable={true}\n                        name=\"languages\"\n                        options={sortThenObjectify(languages)}\n                        onChange={void(0)}\n                        />\n                    </Form.Group>\n                </Form.Row>\n                <Form.Row>\n                <Form.Group as={Col} controlId=\"intro\">\n                    <Form.Label>Brief Introduction</Form.Label>\n                    <Form.Control maxlength=\"200\" as=\"textarea\" type=\"text\" defaultValue={formState.intro} />\n                </Form.Group>\n                </Form.Row>\n                <Form.Row>\n                    <Form.Group as={Col}>\n                        <Button variant=\"success\" type=\"submit\" className=\"mr-sm-2\">Save Changes</Button>\n                        <Button variant=\"danger\" onClick={openModal} className=\"ml-sm-2\">Delete Account</Button>\n                    </Form.Group>\n                </Form.Row>\n            </Form>\n            {showModal &&\n            <Modal\n            show={showModal}\n            onHide={closeModal}\n            centered\n            >\n                <Modal.Header closeButton>\n                <Modal.Title>Delete your account permanently?</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    Your profile will be permanently removed from our database of guides and you will be logged out.\n                </Modal.Body>\n                <Modal.Footer>\n                <Button variant=\"danger\" onClick={deleteHandler}>\n                    Confirm Deletion\n                </Button>\n                <Button variant=\"secondary\" onClick={closeModal}>\n                    Cancel\n                </Button>\n                </Modal.Footer>\n            </Modal>\n            }\n        </>\n    )\n}\n\nexport default Profile;","/Users/marcus/Desktop/workspace/locals-full/react/src/components/CitySearch.js",[],"/Users/marcus/Desktop/workspace/locals-full/react/src/index.js",[],"/Users/marcus/Desktop/workspace/locals-full/react/src/components/GuideList.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":15,"column":1,"nodeType":"80","endLine":15,"endColumn":33},{"ruleId":"74","replacedBy":"81"},{"ruleId":"76","replacedBy":"82"},{"ruleId":"78","severity":1,"message":"79","line":50,"column":1,"nodeType":"80","endLine":50,"endColumn":147},{"ruleId":"83","severity":1,"message":"84","line":7,"column":19,"nodeType":"85","messageId":"86","endLine":7,"endColumn":25},{"ruleId":"87","severity":1,"message":"88","line":50,"column":44,"nodeType":"89","endLine":50,"endColumn":59},{"ruleId":"87","severity":1,"message":"88","line":51,"column":45,"nodeType":"89","endLine":51,"endColumn":60},{"ruleId":"83","severity":1,"message":"90","line":6,"column":8,"nodeType":"85","messageId":"86","endLine":6,"endColumn":22},{"ruleId":"83","severity":1,"message":"91","line":34,"column":23,"nodeType":"85","messageId":"86","endLine":34,"endColumn":36},{"ruleId":"92","severity":1,"message":"93","line":139,"column":31,"nodeType":"94","endLine":139,"endColumn":59},{"ruleId":"83","severity":1,"message":"95","line":5,"column":7,"nodeType":"85","messageId":"86","endLine":5,"endColumn":19},{"ruleId":"83","severity":1,"message":"96","line":8,"column":19,"nodeType":"85","messageId":"86","endLine":8,"endColumn":25},{"ruleId":"83","severity":1,"message":"97","line":3,"column":8,"nodeType":"85","messageId":"86","endLine":3,"endColumn":14},{"ruleId":"83","severity":1,"message":"90","line":6,"column":8,"nodeType":"85","messageId":"86","endLine":6,"endColumn":22},{"ruleId":"83","severity":1,"message":"98","line":20,"column":7,"nodeType":"85","messageId":"86","endLine":20,"endColumn":17},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["99"],["100"],"no-unused-vars","'gender' is assigned a value but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'citiesServices' is defined but never used.","'setCurrencies' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'filterGuides' is assigned a value but never used.","'guides' is assigned a value but never used.","'Select' is defined but never used.","'FORM_PROPS' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]